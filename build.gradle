buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.13.0'
    }
}

repositories {
    jcenter()
}

apply plugin: 'com.android.application'

def versionMajor = 1
def versionMinor = 5
def versionPatch = 5

def preDex = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    defaultConfig {
        minSdkVersion 4
        targetSdkVersion 19

        versionCode 66
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testApplicationId "com.vortexwolf.chan.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testFunctionalTest true
    }
    signingConfigs {
        config {
            keyAlias 'alias_name'
            keyPassword 'key_password'
            storeFile file('path_to_key')
            storePassword 'password'
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '.dev'
        }
        release {
            zipAlign true
            runProguard false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard.cfg'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

dependencies {
    compile 'com.android.support:support-v4:20.0.+'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.0'
    compile 'org.ccil.cowan.tagsoup:tagsoup:1.2'
    compile('org.apache.httpcomponents:httpcore:4.3.2') {
        exclude module: "httpclient"
    }
    compile('org.apache.httpcomponents:httpmime:4.3.5') {
        exclude module: "httpclient"
    }
    compile fileTree(dir: 'libs', include: '*.jar')
}