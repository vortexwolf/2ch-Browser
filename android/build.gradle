apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:20.0.+'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.0'
    compile ('org.apache.httpcomponents:httpcore:4.3.2') {
        exclude module: "httpclient"
    }
    compile ('org.apache.httpcomponents:httpmime:4.3.5') {
        exclude module: "httpclient"
    }
    compile 'org.ccil.cowan.tagsoup:tagsoup:1.2'
    compile 'com.google.android.gms:play-services:5.0.89'

    compile fileTree(dir: 'libs', include: '*.jar')
}

def versionMajor = 1
def versionMinor = 5
def versionPatch = 5

def preDex = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    dexOptions {
        preDexLibraries = preDex
    }
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19

        versionCode 66
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testApplicationId "com.vortexwolf.chan.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testFunctionalTest true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    signingConfigs {
        config {
            keyAlias 'alias_name'
            keyPassword 'key_password'
            storeFile file('path_to_key')
            storePassword 'password'
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '.dev'
        }
        release {
            zipAlign true
            runProguard false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard.cfg'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }
    productFlavors {
    }
}

